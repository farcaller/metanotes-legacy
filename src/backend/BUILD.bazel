load("//bazel:jest.bzl", "ts_jest_test")
load("//bazel:ts_project.bzl", "ts_project")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm//@bazel/rollup:index.bzl", "rollup_bundle")
load("@npm//@bazel/terser:index.bzl", "terser_minified")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")

package(default_visibility = ["//visibility:public"])

ts_project(
    name = "store_lib",
    srcs = [
        "error.ts",
        "schema.ts",
        "store.ts",
    ],
    deps = [
        "//src/common/api:api_node",
        "@npm//@grpc/grpc-js",
        "@npm//@types/better-sqlite3",
        "@npm//@types/google-protobuf",
        "@npm//better-sqlite3",
        "@npm//google-protobuf",
    ],
)

ts_jest_test(
    name = "store_test",
    srcs = ["store.test.ts"],
    deps = [
        ":store_lib",
    ],
)

ts_project(
    name = "backend_lib",
    srcs = [
        "index.ts",
        "server.ts",
    ],
    deps = [
        ":store_lib",
        "//src/common/api:api_node",
        "@npm//@grpc/grpc-js",
        "@npm//@types/better-sqlite3",
        "@npm//@types/google-protobuf",
        "@npm//better-sqlite3",
        "@npm//google-protobuf",
    ],
)

nodejs_binary(
    name = "backend",
    data = [
        ":bundle",
    ],
    entry_point = "index.js",
)

rollup_bundle(
    name = "bundle",
    config_file = "rollup.config.js",
    entry_point = "index.js",
    format = "cjs",
    deps = [
        ":backend_lib",
        "@npm//@rollup/plugin-commonjs",
        "@npm//@rollup/plugin-json",
        "@npm//@rollup/plugin-node-resolve",
    ],
)

terser_minified(
    name = "bundle.minified",
    src = ":bundle",
    sourcemap = False,
)

nodejs_image(
    name = "backend_image",
    data = [
        ":bundle",
    ],
    entry_point = "bundle.js",
)
